#	return 302 $scheme://example.com$request_uri;

#	location ~ ^(/[^/]+/)?files/(.+) {
#		try_files /wp-content/blogs.dir/$blogid/files/$2 /wp-includes/ms-files.php?file=$2 ;
#		access_log off;	 log_not_found off; expires max;
#	}

##	#WPMU Files
##	location ~ ^/files/(.*)$ {
##		try_files /wp-content/blogs.dir/$blogid/$uri /wp-includes/ms-files.php?file=$1 ;
##		access_log off; log_not_found off; expires max;
##	}

#	#avoid php readfile()
#	location ^~ /blogs.dir {
#		internal;
#		alias /var/www/example.com/htdocs/wp-content/blogs.dir ;
#		access_log off;	 log_not_found off; expires max;
#	}

##	#WPMU x-sendfile to avoid php readfile()
##	location ^~ /blogs.dir {
##		internal;
##		alias /var/www/example.com/htdocs/wp-content/blogs.dir;
##		access_log off;	log_not_found off; expires max;
##	}

#	if (!-e $request_filename) {
#		rewrite /wp-admin$ $scheme://$host$uri/ permanent;
#		rewrite ^(/[^/]+)?(/wp-.*) $2 last;
#		rewrite ^(/[^/]+)?(/.*\.php) $2 last;
#	}

	location / { try_files $uri $uri/ /index.php$is_args$args; }

	# Deny access to any files with a .php extension in the uploads directory
	# Works in sub-directory installs and also in multisite network
	# Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
	location ~* /(?:uploads|files)/.*\.php$ {
		deny all;
	}

	location ~* \.(css|gif|ico|jpeg|jpg|js|png)$ {
		expires max;
		log_not_found off;
	}

	location ~* ^/(wp-config\.(php|phps)|.*~)$ {
		internal;
	}

	location ~* ^/xmlrpc.php$ {
		deny all;
	}

	location ~ \.php$ { include snippets/fastcgi-php.conf; break; }
