#!/bin/bash

# Username of user on target host, this user MUST have sudo access and possibility to log via SSH
TARGET_USER=semi

cd $(dirname $0)

# Do cleanup
/bin/rm prepare-new-host_init.yml prepare-new-host.yml 2> /dev/null

#if [ ! -e "VAULT" ]; then
#	echo "You should put your VAULT password into file called 'VAULT'."
#	exit 1
#fi

if [ -z "$1" ]; then
	echo "Usage: $(basename ${0}) ip-address-of-target-host"
	exit 1
fi

TARGET_HOST=${1}

ping -c 1 ${TARGET_HOST} > /dev/null || (
echo "Target ${TARGET_HOST} is unavailable. Exiting."
exit 1
)

###
# Should ask SSH and SUDO passwords, just to confirm that ansible and sshpass is installed
if [ ! -e .ansible_pre_done ]; then
echo "Install ansible and sshpass on localhost" && \
apt-get install ansible sshpass
touch .ansible_pre_done
fi
###
# Target host must have python
if [ ! -e .ansible_pre_done.${TARGET_HOST} ]; then
echo "Python MUST be installed on target host" && \
ssh -t ${TARGET_USER}@${TARGET_HOST} "[ -e /usr/bin/python ] || sudo apt-get -y install python" && \
touch .ansible_pre_done.${TARGET_HOST}
fi

###
### Create group, user and set authorized_keys (ssh) and sudoers.
# First ansible run, should ask SSH and SUDO passwords again
if [ ! -e .ansible_init_done.${TARGET_HOST} ]; then
AUTH="--user=${TARGET_USER} --ask-pass --become --ask-become-pass"
ansible-playbook -i ${TARGET_HOST}, modules/z_ansible_init.yml -l ${TARGET_HOST} ${AUTH} && touch .ansible_init_done.${TARGET_HOST}
fi

###
### Create script combination from files in modules
### I know that there is correct way to do this, but I like to do it this way,
### for now. I may fix this later.
#(for a in modules/[0-9][0-9]_*.yml;do cat $a;echo;done) > $(basename ${0}).yml

### User, sudoers and authorized keys should be ready (ansible_init).  Test
### it, this should go without password.
#AUTH="--user=ansible --become"
#ansible-playbook -i ${TARGET_HOST}, $(basename ${0}).yml -l ${TARGET_HOST} ${AUTH}
