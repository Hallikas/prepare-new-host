#!/bin/bash

# Username of user on target host, this user MUST have sudo access and possibility to log via SSH
TARGET_USER=semi

[ -z "$1" ] && (echo "Usage: $(basename ${0}) ip-address-of-target-host" && exit 1)

TARGET_HOST=${1}

ping -c 1 ${1} > /dev/null || (
echo "Target ${TARGET_HOST} is unavailable. Exiting."
exit 1
)

function ansible_pre() {
echo "Install ansible and sshpass on localhost"
apt-get install ansible sshpass
echo "Install ansible on target host"
ssh -t ${TARGET_USER}@${TARGET_HOST} sudo apt-get install ansible
}

function ansible_step1() {
###
### Create group, user and set authorized_keys (ssh) and sudoers.
[ -e $(basename ${0})_step1.yml ] || \
cat <<'EOF' > $(basename ${0})_step1.yml
---
- hosts: all
  gather_facts: false

  tasks:
    - name: Add group 'ansible'
      group:
        name: ansible
        state: present

    - name: Add user 'ansible'
      user:
        name: ansible
        comment: Common account for automation
        shell: /bin/bash
        uid: 999
        group: ansible
        groups: adm,sudo
        append: yes

    - name: Set authorized key took from file
      authorized_key:
        user: ansible
        state: present
        key: "{{ lookup('file', '/root/.ssh/id_rsa.pub') }}"

    - lineinfile:
        dest: /etc/sudoers
        state: present
        regexp: '^%ansible'
        line: '%ansible ALL=(ALL) NOPASSWD: ALL'
        validate: 'visudo -cf %s'

    - lineinfile:
        dest: /etc/sudoers
        state: present
        regexp: '^Defaults:ansible'
        line: 'Defaults:ansible !requiretty'
        validate: 'visudo -cf %s'
EOF
AUTH="--user=${TARGET_USER} --ask-pass --become --ask-become-pass"
ansible-playbook -i ${TARGET_HOST}, $(basename ${0})_step1.yml -l ${TARGET_HOST} ${AUTH}
}

function ansible_step2() {
###
### User, sudoers and authorized keys should be ready. Test it, this should go without password.
[ -e $(basename ${0})_step2.yml ] || \
cat <<'EOF' > $(basename ${0})_step2.yml
---
- hosts: all
  gather_facts: false

  tasks:
    - name: Update APT cache
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install joe
      apt: name=joe state=present

    - name: Install ansible
      apt: name=ansible state=present
EOF
AUTH="--user=ansible --become"
ansible-playbook -i ${TARGET_HOST}, $(basename ${0})_step2.yml -l ${TARGET_HOST} ${AUTH}
}

ansible_pre
ansible_step1
ansible_step2
